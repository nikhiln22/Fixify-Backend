import "reflect-metadata";
import { container } from "tsyringe";
import { TechnicianService } from "../services/technicianService";
import { TechnicianRepository } from "../repositories/technicianRepository";
import { TempTechnicianRepository } from "../repositories/tempRepositories/tempTechnicianRepository";
import { JobDesignationRepository } from "../repositories/jobDesignationRepository";
import { PasswordHasher } from "../utils/password";
import { JWTService } from "../utils/jwt";
import { EmailService } from "../utils/email";
import { EmailTemplateService } from "../utils/emailTemplates";
import { OTPService } from "../utils/otp";
import { RedisService } from "../utils/redis";
import { ITechnicianService } from "../interfaces/Iservices/ItechnicianService";
import { ITechnicianRepository } from "../interfaces/Irepositories/ItechnicianRepository";
import { ITempTechnicianRepository } from "../interfaces/Irepositories/ItempTechnicianRepository";
import { IJobDesignationRepository } from "../interfaces/Irepositories/IjobDesignationRepository";
import { IPasswordHasher } from "../interfaces/IpasswordHasher/IpasswordHasher";
import { IJwtService } from "../interfaces/Ijwt/Ijwt";
import { IEmailService } from "../interfaces/Iemail/Iemail";
import { IemailTemplateService } from "../interfaces/Iemail/IemailTemplate";
import { IOTPService } from "../interfaces/Iotp/IOTP";
import { IRedisService } from "../interfaces/Iredis/Iredis";
import { CloudinaryUploader } from "../utils/cloudinaryUploader";
import { IFileUploader } from "../interfaces/IfileUploader/IfileUploader";
import { IJobsService } from "../interfaces/Iservices/IjobsService";
import { JobService } from "../services/jobService";
import { ITimeSlotRepository } from "../interfaces/Irepositories/ItimeSlotRepository";
import { TimeSlotRepository } from "../repositories/timeSlotRepository";
import { ITimeSlotService } from "../interfaces/Iservices/ItimeSlotService";
import { TimeSlotService } from "../services/timeSlotService";
import { IWalletRepository } from "../interfaces/Irepositories/IwalletRepository";
import { WalletRepository } from "../repositories/walletRepository";
import { IChatService } from "../interfaces/Iservices/IchatService";
import { ChatService } from "../services/chatService";
import { IWalletTransactionRepository } from "../interfaces/Irepositories/IwalletTransactionRepository";
import { WalletTransactionRepository } from "../repositories/walletTransactionRepository";
import { IRatingRepository } from "../interfaces/Irepositories/IratingRepository";
import { RatingRepository } from "../repositories/ratingRepository";


container.registerSingleton<ITechnicianService>("ITechnicianService", TechnicianService);
container.registerSingleton<ITechnicianRepository>("ITechnicianRepository", TechnicianRepository);
container.registerSingleton<ITempTechnicianRepository>("ITempTechnicianRepository", TempTechnicianRepository);
container.registerSingleton<IJobDesignationRepository>("IJobDesignationRepository", JobDesignationRepository);
container.registerSingleton<IPasswordHasher>("IPasswordHasher", PasswordHasher);
container.registerSingleton<IJwtService>("IJwtService", JWTService);
container.registerSingleton<IOTPService>("IOTPService", OTPService);
container.registerSingleton<IRedisService>("IRedisService", RedisService);
container.registerSingleton<IEmailService>("IEmailService", EmailService);
container.registerSingleton<IemailTemplateService>("IemailTemplateService", EmailTemplateService);
container.registerSingleton<IFileUploader>("IFileUploader", CloudinaryUploader);
container.registerSingleton<IJobsService>("IjobsService",JobService);
container.registerSingleton<ITimeSlotService>("ITimeSlotService",TimeSlotService);
container.registerSingleton<ITimeSlotRepository>("ITimeSlotRepository",TimeSlotRepository);
container.registerSingleton<IWalletRepository>("IWalletRepository",WalletRepository);
container.registerSingleton<IChatService>("IchatService",ChatService);
container.registerSingleton<IWalletTransactionRepository>("IWalletTransactionRepository",WalletTransactionRepository);
container.registerSingleton<IRatingRepository>("IRatingRepository",RatingRepository);
